<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Work around https://github.com/NuGet/Home/issues/4412. MVC uses DependencyContext.Load() which looks next to a .dll
    for a .deps.json. Information isn't available elsewhere. Need the .deps.json file for all web site applications.
  -->
  <PropertyGroup>
    <!--
      The functional tests act as the host application for all test websites. Since the CLI copies all reference
      assembly dependencies in websites to their corresponding bin/{config}/refs folder we need to re-calculate
      reference assemblies for this project so there's a corresponding refs folder in our output. Without it
      our websites deps files will fail to find their assembly references.
    -->

    <PreserveCompilationContext>true</PreserveCompilationContext>
  </PropertyGroup>

    <Target Name="_ResolveMvcTestProjectReferences" DependsOnTargets="ResolveReferences">
      <ItemGroup>
        <_ContentRootProjectReferences
          Include="@(ReferencePath)"
          Condition="'%(ReferencePath.ReferenceSourceTarget)' == 'ProjectReference' and '%(ReferencePath.TargetFrameworkIdentifier)' != '.NETStandard'" />
      </ItemGroup>
    </Target>

	<Target Name="_AddContentRootForProjectReferences" BeforeTargets="BeforeCompile" DependsOnTargets="_ResolveMvcTestProjectReferences">
		<ItemGroup>
			<WorkerServiceFactoryContentRootAttribute
			  Condition="'%(_ContentRootProjectReferences.Identity)' != ''"
			  Include="%(_ContentRootProjectReferences.Identity)"
			  AssemblyName="%(_ContentRootProjectReferences.FusionName)"
			  ContentRootPath="$([System.IO.Path]::GetDirectoryName(%(_ContentRootProjectReferences.MSBuildSourceProjectFile)))"
			  ContentRootTest="$([System.IO.Path]::GetFileName(%(_ContentRootProjectReferences.MSBuildSourceProjectFile)))"
			  Priority="0" />
		</ItemGroup>

		<ItemGroup>
			<AssemblyAttribute
			  Condition=" '%(WorkerServiceFactoryContentRootAttribute.Identity)' != '' "
			  Include="WorkerService.Testing.WorkerServiceFactoryContentRootAttribute">
				<_Parameter1>%(WorkerServiceFactoryContentRootAttribute.AssemblyName)</_Parameter1>
				<_Parameter2>%(WorkerServiceFactoryContentRootAttribute.ContentRootPath)</_Parameter2>
				<_Parameter3>%(WorkerServiceFactoryContentRootAttribute.ContentRootTest)</_Parameter3>
				<_Parameter4>%(WorkerServiceFactoryContentRootAttribute.Priority)</_Parameter4>
			</AssemblyAttribute>
		</ItemGroup>
	</Target>

	<Target Name="CopyAditionalFiles" AfterTargets="Build;_ResolveMvcTestProjectReferences" Condition="'$(TargetFramework)'!=''">
		<ItemGroup>
			<DepsFilePaths
			  Condition="'%(_ContentRootProjectReferences.Identity)' != ''"
			  Include="$([System.IO.Path]::ChangeExtension('%(_ContentRootProjectReferences.ResolvedFrom)', '.deps.json'))" />
		</ItemGroup>

		<Copy SourceFiles="%(DepsFilePaths.FullPath)" DestinationFolder="$(OutDir)" Condition="Exists('%(DepsFilePaths.FullPath)')" />
	</Target>

  <!--<Target Name="_AddContentRootForProjectReferences" BeforeTargets="PrepareResources" DependsOnTargets="_ResolveMvcTestProjectReferences">
    <ItemGroup Condition="'@(_ContentRootProjectReferences->Count())' != '0'">
      <_ManifestProjects Include="%(_ContentRootProjectReferences.FusionName)">
        <ContentRoot>$([System.IO.Path]::GetDirectoryName('%(_ContentRootProjectReferences.MSBuildSourceProjectFile)'))</ContentRoot>
      </_ManifestProjects>
    </ItemGroup>
  </Target>

  <Target Name="_GeneratePublishTestManifest" Condition="$(IsPublishable) == 'true'" BeforeTargets="Publish" DependsOnTargets="_ResolveMvcTestProjectReferences">
    <ItemGroup>
      <_PublishManifestProjects Include="%(_ContentRootProjectReferences.FusionName)">
        <ContentRoot>~</ContentRoot>
      </_PublishManifestProjects>
      <_DepsFileToPublish Include="$([System.IO.Path]::ChangeExtension('%(_ContentRootProjectReferences.Identity)', 'deps.json'))" />
    </ItemGroup>
  </Target>

  <Target Name="_MvcCopyDependencyFiles" AfterTargets="Build;_ResolveMvcTestProjectReferences" Condition="'$(TargetFramework)'!=''">
    <ItemGroup>
      <DepsFilePaths
        Condition="'%(_ContentRootProjectReferences.Identity)' != ''"
        Include="$([System.IO.Path]::ChangeExtension('%(_ContentRootProjectReferences.ResolvedFrom)', '.deps.json'))" />
    </ItemGroup>

    <Copy SourceFiles="%(DepsFilePaths.FullPath)" DestinationFolder="$(OutDir)" Condition="Exists('%(DepsFilePaths.FullPath)')" />
  </Target>-->

</Project>
